/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> big_list = new LinkedList<>();
        if(root == null){
            return big_list;
        }
        Queue<TreeNode> queue = new LinkedList<>();

        queue.add(root);

        while(!queue.isEmpty()){
            int count = queue.size();
            List<Integer> small_list = new LinkedList<>();
            while(count > 0){
                TreeNode node = queue.poll();
                if(node != null){
                    small_list.add(node.val);
                    if (node.left != null){
                         queue.add(node.left);
                    }
                    if (node.right != null){
                        queue.add(node.right);
                    }
                }
                count--;
            }

            big_list.add(small_list);
        }


        return big_list;
    }


}
