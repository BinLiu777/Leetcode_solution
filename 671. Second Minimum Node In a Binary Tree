/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public int findSecondMinimumValue(TreeNode root) {
        List<Integer> list = new LinkedList<Integer>();
        setMinimun(root,list);
        if(list.size() == 2 && list.get(0) != list.get(1)){
            Collections.sort(list);
            return list.get(1);
        }
        return -1;
    }
    private void setMinimun(TreeNode root, List<Integer> list){
        if(root == null) return;
        int len = list.size();
        if(len < 2) {
            if(!list.contains(root.val)){
                list.add(root.val);
            }
        }
        else{
            if(!list.contains(root.val)){
                for(int i = 0; i < len; i++){
                    if(root.val < list.get(i)){
                        list.set(i,root.val);
                        break;
                    }
                }
            }
        }
        setMinimun(root.left, list);
        setMinimun(root.right, list);
    }
}
