/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    List<Double> list = new LinkedList<Double>();
    Queue<TreeNode> queue = new LinkedList<TreeNode>();
    public List<Double> averageOfLevels(TreeNode root) {
        if(root == null){
            return list;
        }
        queue.add(root);
        while(!queue.isEmpty()){
            double d = 0;
            int limit = queue.size();
            for(int i = 0; i < limit; i++){
                TreeNode node = queue.poll();
                d += node.val;
                if(node.left != null) queue.add(node.left);
                if(node.right != null) queue.add(node.right);
            }
            list.add(d/limit);
        }
        return list;
    }
}
