/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    int max = 0;
    public int longestUnivaluePath(TreeNode root) {
        univaluePath(root);
        return max;
    }
    private int univaluePath(TreeNode root){
        if (root == null) return 0;
        int left = univaluePath(root.left);
        int right = univaluePath(root.right);
        int arrowLeft = 0;
        int arrowRight = 0;
        if(root.left != null && root.left.val == root.val){
            arrowLeft = left + 1;
        }
        if(root.right != null && root.right.val == root.val){
            arrowRight = right + 1;
        }
        max = Math.max(max,arrowLeft+arrowRight);

        return Math.max(arrowLeft, arrowRight);
    }
}
